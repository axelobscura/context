{"version":3,"sources":["hooks/useToggleState.js","contexts/ThemeContext.js","PageContent.js","styles/NavBarStyles.js","contexts/LanguageContext.js","Navbar.js","styles/FormStyles.js","Form.js","serviceWorker.js","index.js","App.js"],"names":["useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","state","setState","ThemeContext","createContext","ThemeProvider","props","_useToggleState","useToggleState","_useToggleState2","isDarkMode","toggleTheme","react_default","a","createElement","Provider","value","children","PageContent","styles","backgroundColor","useContext","height","width","style","theme","root","marginBottom","grow","flexGrow","menuButton","marginLeft","marginRight","title","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","&:hover","spacing","unit","searchIcon","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","LanguageContext","LanguageProvider","language","setLanguage","changeLanguage","e","target","content","english","flag","french","spanish","withStyles","_useContext","classes","_content$language","className","AppBar_default","Toolbar_default","IconButton_default","role","aria-label","Typography_default","variant","Switch_default","onChange","Search_default","InputBase_default","placeholder","concat","input","main","paper","marginTop","flexDirection","padding","avatar","margin","secondary","form","submit","words","signIn","email","password","remember","_words$language","Paper_default","Avatar_default","LockOutlined_default","Select_default","MenuItem_default","FormControl_default","required","fullWidth","InputLabel_default","htmlFor","Input_default","id","name","autoFocus","FormControlLabel_default","control","Checkbox_default","label","Button_default","type","Boolean","window","location","hostname","match","ReactDOM","render","src_Navbar","src_Form","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8704a90.chunk.js","sourcesContent":["import { useState } from 'react';\nfunction useToggle(initialVal = false){\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state)\n  };\n  return [state, toggle];\n}\nexport default useToggle;","import React, {createContext} from 'react';\nimport useToggleState from '../hooks/useToggleState';\n\nexport const ThemeContext = createContext();\n\nexport function ThemeProvider(props) {\n  const [isDarkMode, toggleTheme] = useToggleState(false);\n\n\n  return(\n    <ThemeContext.Provider value={{isDarkMode, toggleTheme}}>\n      {props.children}\n    </ThemeContext.Provider>\n  )\n}\n\n","import React, { useContext } from 'react';\nimport { ThemeContext } from './contexts/ThemeContext';\n\nexport default function PageContent(props) {\n  const { isDarkMode } = useContext(ThemeContext);\n  const styles={\n    backgroundColor: isDarkMode ? \"black\" : \"white\",\n    height: '100vh',\n    width: '100vw'\n  }\n  return(\n    <div style={styles}>\n      {props.children}\n    </div>\n  )\n}","import { fade } from \"@material-ui/core/styles/colorManipulator\";\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginBottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nexport default styles;\n","import React, { createContext, useState } from 'react';\n\nexport const LanguageContext = createContext();\n\nexport function LanguageProvider(props) {\n  const [language, setLanguage] = useState(\"spanish\");\n  const changeLanguage = (e) => setLanguage(e.target.value);\n  return(\n    <LanguageContext.Provider value={{language, changeLanguage}}>\n      {props.children}\n    </LanguageContext.Provider>\n  )\n}\n\nexport const withLanguageContext = Component => props => (\n  <LanguageContext.Consumer>\n    {value => <Component LanguageContext={value} {...props} />}\n  </LanguageContext.Consumer>\n)","import React, { useContext } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/NavBarStyles\";\nimport {ThemeContext} from './contexts/ThemeContext';\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nconst content = {\n  english: {\n    search: \"Search\",\n    flag: \"🥴\"\n  },\n  french: {\n    search: \"Chercher\",\n    flag: \"🇫🇷\"\n  },\n  spanish: {\n    search: \"Buscar\",\n    flag: \"🥵\"\n  }\n}\nfunction Navbar(props) {\n    const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n    const { language } = useContext(LanguageContext);\n    const { classes } = props;\n    const { search, flag } = content[language];\n    return (\n      <div className={classes.root}>\n        <AppBar position='static' color={isDarkMode ? \"default\" : \"primary\"}>\n          <Toolbar>\n            <IconButton className={classes.menuButton} color='inherit'>\n            <span role='img' aria-label='lafrance'>{flag}</span>\n            </IconButton>\n            <Typography className={classes.title} variant='h6' color='inherit'>\n              App Title\n            </Typography>\n            <Switch onChange={toggleTheme} />\n            <div className={classes.grow} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder={`${search}...`}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput\n                }}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n      \n    );\n}\nexport default withStyles(styles)(Navbar);\n","const styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3\n  }\n});\nexport default styles;\n","import React, { useContext } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"./styles/FormStyles\";\nimport {LanguageContext} from \"./contexts/LanguageContext\";\nconst words = {\n  english: {\n    signIn: \"Sign In\",\n    email: \"Email\",\n    password: \"Password\",\n    remember: \"Remember Me\"\n  },\n  french: {\n    signIn: \"Se Connecter\",\n    email: \"Adresse Electronique\",\n    password: \"Mot de Passe\",\n    remember: \"Remember Me\"\n  },\n  spanish: {\n    signIn: \"Registrarse\",\n    email: \"Correo Electrónico\",\n    password: \"Contraseña\",\n    remember: \"Remember Me\"\n  }\n}\nfunction Form(props){\n  const { language, changeLanguage } = useContext(LanguageContext);\n  const { classes } = props;\n  const { signIn, email, password, remember } = words[language];\n  return(\n    <main className={classes.main}>\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n    <Typography variant='h5'>{signIn}</Typography>\n          <Select value={language} onChange={changeLanguage}>\n            <MenuItem value='english'>English</MenuItem>\n            <MenuItem value='french'>Francais</MenuItem>\n            <MenuItem value='spanish'>Español</MenuItem>\n          </Select>\n          <form className={classes.form}>\n            <FormControl margin='normal' required fullWidth>\n              <InputLabel htmlFor='email'>{email}</InputLabel>\n              <Input id='email' name='email' autoFocus />\n            </FormControl>\n            <FormControl margin='normal' required fullWidth>\n              <InputLabel htmlFor='password'>{password}</InputLabel>\n              <Input id='password' name='password' autoFocus />\n            </FormControl>\n            <FormControlLabel\n              control={<Checkbox color='primary' />}\n              label={remember}\n            />\n            <Button\n              variant='contained'\n              type='submit'\n              fullWidth\n              color='primary'\n              className={classes.submit}\n            >\n              {signIn}\n            </Button>\n          </form>\n        </Paper>\n      </main>\n  )\n}\n/* class Form extends Component {\n  static contextType = LanguageContext;\n  render() {\n    \n    return (\n      \n    );\n  }\n} */\nexport default withStyles(styles)(Form);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport PageContent from './PageContent';\nimport Navbar from \"./Navbar\";\nimport Form from \"./Form\";\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { LanguageProvider } from './contexts/LanguageContext';\n\nexport default function App(){\n  return (\n    <ThemeProvider>\n      <LanguageProvider>\n        <PageContent>\n            <Navbar />\n            <Form />\n        </PageContent >\n      </LanguageProvider>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}