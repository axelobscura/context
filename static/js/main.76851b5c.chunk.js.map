{"version":3,"sources":["styles/NavBarStyles.js","Navbar.js","styles/FormStyles.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","width","marginBottom","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","height","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","Navbar","classes","this","props","react_default","a","createElement","className","AppBar_default","Toolbar_default","IconButton_default","Typography_default","variant","Switch_default","Search_default","InputBase_default","placeholder","input","Component","withStyles","main","paper","marginTop","flexDirection","padding","concat","avatar","margin","secondary","form","submit","Form","Paper_default","Avatar_default","LockOutlined_default","Select_default","value","MenuItem_default","FormControl_default","required","fullWidth","InputLabel_default","htmlFor","Input_default","id","name","autoFocus","FormControlLabel_default","control","Checkbox_default","label","Button_default","type","App","Fragment","src_Navbar","src_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76851b5c.chunk.js","sourcesContent":["import { fade } from \"@material-ui/core/styles/colorManipulator\";\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginBottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/NavBarStyles\";\n\nclass Navbar extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position='static' color='primary'>\n          <Toolbar>\n            <IconButton className={classes.menuButton} color='inherit'>\n              <span>ðŸ‡«ðŸ‡·</span>\n            </IconButton>\n            <Typography className={classes.title} variant='h6' color='inherit'>\n              App Title\n            </Typography>\n            <Switch />\n            <div className={classes.grow} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder='Search...'\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput\n                }}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Navbar);\n","const styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3\n  }\n});\nexport default styles;\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"./styles/FormStyles\";\n\nclass Form extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography variant='h5'>Sign In</Typography>\n          <Select value='english'>\n            <MenuItem value='english'>English</MenuItem>\n            <MenuItem value='french'>French</MenuItem>\n            <MenuItem value='spanish'>Spanish</MenuItem>\n          </Select>\n          <form className={classes.form}>\n            <FormControl margin='normal' required fullWidth>\n              <InputLabel htmlFor='email'>Email</InputLabel>\n              <Input id='email' name='email' autoFocus />\n            </FormControl>\n            <FormControl margin='normal' required fullWidth>\n              <InputLabel htmlFor='password'>Password</InputLabel>\n              <Input id='password' name='password' autoFocus />\n            </FormControl>\n            <FormControlLabel\n              control={<Checkbox color='primary' />}\n              label='Remember Me'\n            />\n            <Button\n              variant='contained'\n              type='submit'\n              fullWidth\n              color='primary'\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </form>\n        </Paper>\n      </main>\n    );\n  }\n}\nexport default withStyles(styles)(Form);\n","import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Navbar />\n        <Form />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}